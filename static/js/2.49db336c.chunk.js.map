{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonToolbar.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/DropdownButton.js","pages/buttons-group.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/types.js"],"names":["ButtonToolbar","React","ref","bsPrefix","className","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","role","FormCheckInput","id","type","isValid","isInvalid","as","Component","controlId","useContext","FormContext","InputGroupText","createWithBsPrefix","InputGroup","size","hasValidation","contextValue","useMemo","InputGroupContext","Provider","value","children","Object","assign","Text","Radio","Checkbox","propTypes","PropTypes","string","href","onClick","func","title","node","isRequired","disabled","bool","align","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","oneOf","variant","DropdownButton","_jsxs","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","renderOnMount","Default","Fragment","Col","lg","ButtonGroup","Button","FormControl","placeholder","Item","eventKey","vertical","rest","baseClass","alignDirection","oneOfType","shape","sm","md","xl","xxl"],"mappings":"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","file":"static/js/2.49db336c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  role: 'toolbar'\n};\nconst ButtonToolbar = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(className, prefix)\n  });\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React from \"react\";\r\nimport {\r\n  ButtonGroup,\r\n  Button,\r\n  Col,\r\n  ButtonToolbar,\r\n  InputGroup,\r\n  FormControl,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\nconst Default = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Basic button groups</h2>\r\n          <ButtonGroup aria-label=\"Basic example\">\r\n            <Button variant=\"secondary\">Left</Button>\r\n            <Button variant=\"secondary\">Middle</Button>\r\n            <Button variant=\"secondary\">Right</Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Button groups toolbar</h2>\r\n          <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n            <ButtonGroup className=\"me-2\" aria-label=\"First group\">\r\n              <Button>1</Button> <Button>2</Button> <Button>3</Button>{\" \"}\r\n              <Button>4</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup className=\"me-2\" aria-label=\"Second group\">\r\n              <Button>5</Button> <Button>6</Button> <Button>7</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup aria-label=\"Third group\">\r\n              <Button>8</Button>\r\n            </ButtonGroup>\r\n          </ButtonToolbar>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Mix input groups with button groups</h2>\r\n          <ButtonToolbar\r\n            className=\"mb-3\"\r\n            aria-label=\"Toolbar with Button groups\"\r\n          >\r\n            <ButtonGroup className=\"me-2\" aria-label=\"First group\">\r\n              <Button variant=\"secondary\">1</Button>{\" \"}\r\n              <Button variant=\"secondary\">2</Button>{\" \"}\r\n              <Button variant=\"secondary\">3</Button>{\" \"}\r\n              <Button variant=\"secondary\">4</Button>\r\n            </ButtonGroup>\r\n            <InputGroup>\r\n              <InputGroup.Text id=\"btnGroupAddon\">@</InputGroup.Text>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Input group example\"\r\n                aria-label=\"Input group example\"\r\n                aria-describedby=\"btnGroupAddon\"\r\n              />\r\n            </InputGroup>\r\n          </ButtonToolbar>\r\n\r\n          <ButtonToolbar\r\n            className=\"justify-content-between\"\r\n            aria-label=\"Toolbar with Button groups\"\r\n          >\r\n            <ButtonGroup aria-label=\"First group\">\r\n              <Button variant=\"secondary\">1</Button>{\" \"}\r\n              <Button variant=\"secondary\">2</Button>{\" \"}\r\n              <Button variant=\"secondary\">3</Button>{\" \"}\r\n              <Button variant=\"secondary\">4</Button>\r\n            </ButtonGroup>\r\n            <InputGroup>\r\n              <InputGroup.Text id=\"btnGroupAddon2\">@</InputGroup.Text>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Input group example\"\r\n                aria-label=\"Input group example\"\r\n                aria-describedby=\"btnGroupAddon2\"\r\n              />\r\n            </InputGroup>\r\n          </ButtonToolbar>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Button groups sizing</h2>\r\n          <ButtonGroup size=\"lg\" className=\"mb-2\">\r\n            <Button>Left</Button>\r\n            <Button>Middle</Button>\r\n            <Button>Right</Button>\r\n          </ButtonGroup>\r\n          <br />\r\n          <ButtonGroup className=\"mb-2\">\r\n            <Button>Left</Button>\r\n            <Button>Middle</Button>\r\n            <Button>Right</Button>\r\n          </ButtonGroup>\r\n          <br />\r\n          <ButtonGroup size=\"sm\">\r\n            <Button>Left</Button>\r\n            <Button>Middle</Button>\r\n            <Button>Right</Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Nesting</h2>\r\n          <ButtonGroup>\r\n            <Button>1</Button>\r\n            <Button>2</Button>\r\n\r\n            <DropdownButton\r\n              as={ButtonGroup}\r\n              title=\"Dropdown\"\r\n              id=\"bg-nested-dropdown\"\r\n            >\r\n              <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n            </DropdownButton>\r\n          </ButtonGroup>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Vertical variation</h2>\r\n          <ButtonGroup vertical>\r\n            <Button>Button</Button>\r\n            <Button>Button</Button>\r\n\r\n            <DropdownButton\r\n              as={ButtonGroup}\r\n              title=\"Dropdown\"\r\n              id=\"bg-vertical-dropdown-1\"\r\n            >\r\n              <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n            </DropdownButton>\r\n\r\n            <Button>Button</Button>\r\n            <Button>Button</Button>\r\n\r\n            <DropdownButton\r\n              as={ButtonGroup}\r\n              title=\"Dropdown\"\r\n              id=\"bg-vertical-dropdown-2\"\r\n            >\r\n              <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n            </DropdownButton>\r\n\r\n            <DropdownButton\r\n              as={ButtonGroup}\r\n              title=\"Dropdown\"\r\n              id=\"bg-vertical-dropdown-3\"\r\n            >\r\n              <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n            </DropdownButton>\r\n          </ButtonGroup>\r\n        </div>\r\n      </Col>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);"],"sourceRoot":""}