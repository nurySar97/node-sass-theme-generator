{"version":3,"sources":["../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","pages/buttons.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ButtonGroup.js"],"names":["noop","ToggleButton","React","ref","bsPrefix","name","className","checked","type","onChange","value","disabled","id","inputRef","props","useBootstrapPrefix","_jsxs","_Fragment","children","_jsx","autoComplete","Button","classNames","undefined","as","htmlFor","displayName","ToggleButtonGroup","useUncontrolled","controlledProps","getValues","concat","invariant","ButtonGroup","map","child","values","childVal","childOnChange","indexOf","chainFunction","e","inputVal","event","isActive","filter","n","handleToggle","defaultProps","vertical","Object","assign","Default","useState","setValue","isLoading","setLoading","setChecked","radioValue","setRadioValue","radios","useEffect","Promise","resolve","setTimeout","then","Fragment","Col","lg","variant","toLowerCase","href","size","active","onClick","currentTarget","radio","idx","defaultValue","val","func","index","forEach","Component","rest","prefix","baseClass","role"],"mappings":"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","file":"static/js/3.15e75e2d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst noop = () => undefined;\n\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, { ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import * as React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    children,\n    type,\n    name,\n    value,\n    onChange,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    value: 'onChange'\n  });\n\n  const getValues = () => value == null ? [] : [].concat(value);\n\n  const handleToggle = (inputVal, event) => {\n    if (!onChange) {\n      return;\n    }\n\n    const values = getValues();\n    const isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(n => n !== inputVal), event);\n    } else {\n      onChange([...values, inputVal], event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/_jsx(ButtonGroup, { ...controlledProps,\n    ref: ref,\n    children: map(children, child => {\n      const values = getValues();\n      const {\n        value: childVal,\n        onChange: childOnChange\n      } = child.props;\n\n      const handler = e => handleToggle(childVal, e);\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    })\n  });\n});\nToggleButtonGroup.defaultProps = defaultProps;\nexport default Object.assign(ToggleButtonGroup, {\n  Button: ToggleButton\n});","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  Button,\r\n  ButtonGroup,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"react-bootstrap\";\r\n\r\nfunction simulateNetworkRequest() {\r\n  return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n\r\nconst Default = () => {\r\n  const [value, setValue] = useState([1, 3]);\r\n  const handleChange = (val) => setValue(val);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n  const [radioValue, setRadioValue] = useState(\"1\");\r\n\r\n  const radios = [\r\n    { name: \"Active\", value: \"1\" },\r\n    { name: \"Radio\", value: \"2\" },\r\n    { name: \"Radio\", value: \"3\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      simulateNetworkRequest().then(() => {\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [isLoading]);\r\n\r\n  const handleClick = () => setLoading(true);\r\n  return (\r\n    <React.Fragment>\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Basic buttons</h2>\r\n          {[\r\n            \"Primary\",\r\n            \"Secondary\",\r\n            \"Success\",\r\n            \"Danger\",\r\n            \"Warning\",\r\n            \"Info\",\r\n            \"Light\",\r\n            \"Dark\",\r\n            \"Dink\",\r\n          ].map((variant) => (\r\n            <Button\r\n              key={variant}\r\n              className=\"m-1\"\r\n              variant={`${variant.toLowerCase()}`}\r\n            >\r\n              {variant}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Outline buttons</h2>\r\n          {[\r\n            \"Primary\",\r\n            \"Secondary\",\r\n            \"Success\",\r\n            \"Danger\",\r\n            \"Warning\",\r\n            \"Info\",\r\n            \"Light\",\r\n            \"Dark\",\r\n            \"Dink\",\r\n          ].map((variant) => (\r\n            <Button\r\n              key={variant}\r\n              className=\"m-1\"\r\n              variant={`outline-${variant.toLowerCase()}`}\r\n            >\r\n              {variant}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Button tags</h2>\r\n          <Button className=\"m-3\" href=\"#\">\r\n            Link\r\n          </Button>\r\n          <Button className=\"m-1\" type=\"submit\">\r\n            Button\r\n          </Button>\r\n          <Button className=\"m-1\" as=\"input\" type=\"button\" value=\"Input\" />\r\n          <Button className=\"m-1\" as=\"input\" type=\"submit\" value=\"Submit\" />\r\n          <Button className=\"m-1\" as=\"input\" type=\"reset\" value=\"Reset\" />\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Buttons sizes</h2>\r\n          <Button className=\"m-1\" size=\"sm\">\r\n            Small Primary Button\r\n          </Button>\r\n\r\n          <Button className=\"m-1\" size=\"lg\">\r\n            Large Primary Button\r\n          </Button>\r\n\r\n          <Button className=\"m-1\" variant=\"secondary\" size=\"sm\">\r\n            Small Secondary Button\r\n          </Button>\r\n\r\n          <Button className=\"m-1\" variant=\"secondary\" size=\"lg\">\r\n            Large Secondary Button\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Block buttons</h2>\r\n          <div className=\"d-grid gap-2\">\r\n            <Button className=\"m-3\" size=\"sm\">\r\n              Small primary block-level button\r\n            </Button>\r\n\r\n            <Button className=\"m-3\" size=\"lg\">\r\n              Large primary block-level button\r\n            </Button>\r\n\r\n            <Button className=\"m-3\" variant=\"secondary\" size=\"sm\">\r\n              Small secondary block-level button\r\n            </Button>\r\n\r\n            <Button className=\"m-3\" variant=\"secondary\" size=\"lg\">\r\n              Large secondary block-level button\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Active state</h2>\r\n          <Button className=\"m-3\" variant=\"primary\" size=\"lg\" active>\r\n            Primary button\r\n          </Button>\r\n          <Button className=\"m-3\" variant=\"secondary\" size=\"lg\" active>\r\n            Button\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Disabled state</h2>\r\n          <Button className=\"m-3\" variant=\"primary\" size=\"lg\" disabled>\r\n            Primary button\r\n          </Button>\r\n          <Button className=\"m-3\" variant=\"secondary\" size=\"lg\" disabled>\r\n            Button\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Button loading state</h2>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={isLoading}\r\n            onClick={!isLoading ? handleClick : null}\r\n          >\r\n            {isLoading ? \"Loading…\" : \"Click to load\"}\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Checkbox / Radio</h2>\r\n          <ButtonGroup className=\"mb-2\">\r\n            <ToggleButton\r\n              id=\"toggle-check\"\r\n              type=\"checkbox\"\r\n              variant=\"secondary\"\r\n              checked={checked}\r\n              value=\"1\"\r\n              onChange={(e) => setChecked(e.currentTarget.checked)}\r\n            >\r\n              Checked\r\n            </ToggleButton>\r\n          </ButtonGroup>\r\n          <br />\r\n          <ButtonGroup className=\"mb-2\">\r\n            {radios.map((radio, idx) => (\r\n              <ToggleButton\r\n                key={idx}\r\n                id={`radio-${idx}`}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n              >\r\n                {radio.name}\r\n              </ToggleButton>\r\n            ))}\r\n          </ButtonGroup>\r\n          <br />\r\n          <ToggleButton\r\n            className=\"mb-2\"\r\n            id=\"toggle-check\"\r\n            type=\"checkbox\"\r\n            variant=\"outline-primary\"\r\n            checked={checked}\r\n            value=\"1\"\r\n            onChange={(e) => setChecked(e.currentTarget.checked)}\r\n          >\r\n            Checked\r\n          </ToggleButton>\r\n          <br />\r\n          <ButtonGroup>\r\n            {radios.map((radio, idx) => (\r\n              <ToggleButton\r\n                key={idx}\r\n                id={`radio-${idx}`}\r\n                type=\"radio\"\r\n                variant={idx % 2 ? \"outline-success\" : \"outline-danger\"}\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n              >\r\n                {radio.name}\r\n              </ToggleButton>\r\n            ))}\r\n          </ButtonGroup>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Uncontrolled</h2>\r\n          <ToggleButtonGroup\r\n            type=\"checkbox\"\r\n            defaultValue={[1, 3]}\r\n            className=\"mb-2\"\r\n          >\r\n            <ToggleButton id=\"tbg-check-1\" value={1}>\r\n              Checkbox 1 (pre-checked)\r\n            </ToggleButton>\r\n            <ToggleButton id=\"tbg-check-2\" value={2}>\r\n              Checkbox 2\r\n            </ToggleButton>\r\n            <ToggleButton id=\"tbg-check-3\" value={3}>\r\n              Checkbox 3 (pre-checked)\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          <br />\r\n          <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n            <ToggleButton id=\"tbg-radio-1\" value={1}>\r\n              Radio 1 (pre-checked)\r\n            </ToggleButton>\r\n            <ToggleButton id=\"tbg-radio-2\" value={2}>\r\n              Radio 2\r\n            </ToggleButton>\r\n            <ToggleButton id=\"tbg-radio-3\" value={3}>\r\n              Radio 3\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col className=\"p-3\" lg=\"6\">\r\n        <div className=\"component\">\r\n          <h2 className=\"h2\">Controlled</h2>\r\n          <ToggleButtonGroup\r\n            type=\"checkbox\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          >\r\n            <ToggleButton id=\"tbg-btn-1\" value={1}>\r\n              Option 1\r\n            </ToggleButton>\r\n            <ToggleButton id=\"tbg-btn-2\" value={2}>\r\n              Option 2\r\n            </ToggleButton>\r\n            <ToggleButton id=\"tbg-btn-3\" value={3}>\r\n              Option 3\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n      </Col>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"sourceRoot":""}